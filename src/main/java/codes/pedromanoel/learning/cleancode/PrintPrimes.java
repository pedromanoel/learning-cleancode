/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package codes.pedromanoel.learning.cleancode;

class PrintPrimes {
    public static void main(String[] args) {
        new PrintPrimes().run();
    }

    public void run() {
        final int M = 1000;
        int[] P = findPrimes(M);
        printPrimes(M, P);
    }

    private int[] findPrimes(final int M) {
        final int ORDMAX = 30;

        boolean JPRIME;
        int MULT[] = new int[ORDMAX + 1];

        int J = 1;
        int K = 1;
        int ORD = 2;
        int SQUARE = 9;
        int P[] = new int[M + 1];
        P[1] = 2;

        while (K < M) {
            do {
                J = J + 2;
                if (J == SQUARE) {
                    ORD = ORD + 1;
                    SQUARE = P[ORD] * P[ORD];
                    MULT[ORD - 1] = J;
                }
                int N = 2;
                JPRIME = true;
                while (N < ORD && JPRIME) {
                    while (MULT[N] < J)
                        MULT[N] = MULT[N] + P[N] + P[N];
                    if (MULT[N] == J) {
                        JPRIME = false;
                    }
                    N = N + 1;
                }
            } while (!JPRIME);
            K = K + 1;
            P[K] = J;
        }

        return P;
    }

    private void printPrimes(int M, int[] P) {
        final int RR = 50;
        final int CC = 4;
        final int WW = 10;
        int PAGENUMBER = 1;
        int PAGEOFFSET = 1;
        while (PAGEOFFSET <= M) {
            System.out.println("The First " + M +
                    " Prime Numbers --- Page " + PAGENUMBER);
            System.out.println("");
            for (int ROWOFFSET = PAGEOFFSET; ROWOFFSET < PAGEOFFSET + RR; ROWOFFSET++) {
                for (int C = 0; C < CC; C++)
                    if (ROWOFFSET + C * RR <= M)
                        System.out.format("%10d", P[ROWOFFSET + C * RR]);
                System.out.println("");
            }
            System.out.println("\f");
            PAGENUMBER = PAGENUMBER + 1;
            PAGEOFFSET = PAGEOFFSET + RR * CC;
        }
    }
}
